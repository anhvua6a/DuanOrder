<div class="container" >

    <!-- Phần header website -->



    <!-- Phần nội dung chính -->
    <div class="row">
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 text-center">
            <div class="page-section">
                <h1 class="page-title">Danh sách hoá đơn</h1>
            </div>
        </div>
    </div>
    <div class="row justify-content-lg-end">
        <div class="col-4 m-3">
            <form class="form-inline my-2 my-lg-0" method="get">
                <input class="form-control mr-sm-2" name="keyword" type="search" placeholder="Search" aria-label="Search">
                <button class="btn btn-outline-success my-2 my-sm-0" type="submit">Search</button>
            </form>
        </div>
    </div>

    <div class="container mt-2 justify-content-center">

        <div class="card-columns">
            <% for (var i = 0; i < bills.length; i++) { %>
                <div class="card p-3" id="item_User">
                    <div class="d-flex align-items-center">
                        <div class="ml-3 w-100" id="name">
                            <a href="/bills/<%= bills[i].billCode %>"  class="mb-0 mt-0">
                                <%= bills[i].billCode %>
                            </a>

                            <div class="p-2 mt-2 d-flex justify-content-between rounded stats">

                                <div class="d-flex flex-column">
                                    <span>Ngày: <%= bills[i].dateBill %></span>
                                    <span>Thu ngân: <%= bills[i].nameCashier %></span>
                                    <span>Nhân viên: <%= bills[i].nameOrder %></span>
                                    <span class="articles">Số bàn: <%= bills[i].tableCode %></span>
                                    <span class="articles">Tổng tiền: <%= bills[i].totalPrice %></span>
                                </div>

                            </div>
                            <h6 class="articles" style="color: green">Trạng thái : <%= bills[i].status %></h6>
                        </div>
                    </div>
                </div>

            <% } %>
        </div>



    </div>


<!-- Kết thúc phần nội dung chính -->


</div>



<nav aria-label="Page navigation example">
    <ul class="pagination justify-content-center">
        <li class="page-item disabled">
            <a class="page-link"
               onclick="prePage(<%=currentPage%>)"  <% if (currentPage == 1) {%> tabindex="-1" <%}%>>
                Previous
            </a>
        </li>
        <% for (let i = 1; i <= totalPages; i++) {%>
            <li class="page-item ">
                <a class="page-link <% if (i == currentPage) {%> selected <%}%>" onclick="changePage(i)"  href="/bills?page=<%=i%>"><%=i%></a>
            </li>
        <%}%>
        <li class="page-item">
            <a class="page-link" onclick="nextPage(<%=currentPage%>)" href="#">Next</a>
        </li>
    </ul>
</nav>


<script>
    function changePage(currentPage) {
        console.log(currentPage)
    }

    function prePage(currentPage) {

    }

    function nextPage(currentPage) {
        currentPage++
    }
    // Returns an array of maxLength (or less) page numbers
    // where a 0 in the returned array denotes a gap in the series.
    // Parameters:
    //   totalPages:     total number of pages
    //   page:           current page
    //   maxLength:      maximum size of returned array
    function getPageList(totalPages, page, maxLength) {
        if (maxLength < 5) throw "maxLength must be at least 5";

        function range(start, end) {
            return Array.from(Array(end - start + 1), (_, i) => i + start);
        }

        var sideWidth = maxLength < 9 ? 1 : 2;
        var leftWidth = (maxLength - sideWidth*2 - 3) >> 1;
        var rightWidth = (maxLength - sideWidth*2 - 2) >> 1;
        if (totalPages <= maxLength) {
            // no breaks in list
            return range(1, totalPages);
        }
        if (page <= maxLength - sideWidth - 1 - rightWidth) {
            // no break on left of page
            return range(1, maxLength - sideWidth - 1)
                .concat(0, range(totalPages - sideWidth + 1, totalPages));
        }
        if (page >= totalPages - sideWidth - 1 - rightWidth) {
            // no break on right of page
            return range(1, sideWidth)
                .concat(0, range(totalPages - sideWidth - 1 - rightWidth - leftWidth, totalPages));
        }
        // Breaks on both sides
        return range(1, sideWidth)
            .concat(0, range(page - leftWidth, page + rightWidth),
                0, range(totalPages - sideWidth + 1, totalPages));
    }

</script>

<style>
    .selected {
        color:red !important;
    }
</style>
